schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type AssetDeployments {
  asset: Assets
  assetId: String1!
  deploymentId: String1!
  id: String1!
  smartContractDeployment: SmartContractDeployments
}

type AssetDeploymentsAggExp {
  _count: Int!
  assetId: StringAggExp!
  deploymentId: StringAggExp!
  id: StringAggExp!
}

input AssetDeploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [AssetDeploymentsOrderBy!]
  where: assetDeploymentsBoolExp
}

input AssetDeploymentsOrderBy {
  asset: AssetsOrderBy
  assetId: OrderBy
  deploymentId: OrderBy
  id: OrderBy
  smartContractDeployment: SmartContractDeploymentsOrderBy
}

type AssetStandards {
  definition: String1!
  id: String1!
  name: String1!
  smartContractDeployments(limit: Int, offset: Int, order_by: [SmartContractDeploymentsOrderBy!], where: SmartContractDeploymentsBoolExp): [SmartContractDeployments!]
  smartContractDeploymentsAggregate(filter_input: SmartContractDeploymentsFilterInput): SmartContractDeploymentsAggExp!
}

type AssetStandardsAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AssetStandardsBoolExp {
  _and: [AssetStandardsBoolExp!]
  _not: AssetStandardsBoolExp
  _or: [AssetStandardsBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  smartContractDeployments: SmartContractDeploymentsBoolExp
}

input AssetStandardsFilterInput {
  limit: Int
  offset: Int
  order_by: [AssetStandardsOrderBy!]
  where: AssetStandardsBoolExp
}

input AssetStandardsOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AssetStatuses {
  assets(limit: Int, offset: Int, order_by: [AssetsOrderBy!], where: AssetsBoolExp): [Assets!]
  assetsAggregate(filter_input: AssetsFilterInput): AssetsAggExp!
  definition: String1!
  id: String1!
  name: String1!
}

type AssetStatusesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AssetStatusesBoolExp {
  _and: [AssetStatusesBoolExp!]
  _not: AssetStatusesBoolExp
  _or: [AssetStatusesBoolExp!]
  assets: AssetsBoolExp
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input AssetStatusesFilterInput {
  limit: Int
  offset: Int
  order_by: [AssetStatusesOrderBy!]
  where: AssetStatusesBoolExp
}

input AssetStatusesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AssetSupportTypes {
  definition: String1!
  id: String1!
  name: String1!
  productAssetRelationships(limit: Int, offset: Int, order_by: [ProductAssetRelationshipsOrderBy!], where: ProductAssetRelationshipsBoolExp): [ProductAssetRelationships!]
  productAssetRelationshipsAggregate(filter_input: ProductAssetRelationshipsFilterInput): ProductAssetRelationshipsAggExp!
}

type AssetSupportTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AssetSupportTypesBoolExp {
  _and: [AssetSupportTypesBoolExp!]
  _not: AssetSupportTypesBoolExp
  _or: [AssetSupportTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  productAssetRelationships: ProductAssetRelationshipsBoolExp
}

input AssetSupportTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AssetSupportTypesOrderBy!]
  where: AssetSupportTypesBoolExp
}

input AssetSupportTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AssetTypes {
  assets(limit: Int, offset: Int, order_by: [AssetsOrderBy!], where: AssetsBoolExp): [Assets!]
  assetsAggregate(filter_input: AssetsFilterInput): AssetsAggExp!
  definition: String1!
  id: String1!
  name: String1!
}

type AssetTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input AssetTypesBoolExp {
  _and: [AssetTypesBoolExp!]
  _not: AssetTypesBoolExp
  _or: [AssetTypesBoolExp!]
  assets: AssetsBoolExp
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input AssetTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [AssetTypesOrderBy!]
  where: AssetTypesBoolExp
}

input AssetTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type AssetUrls {
  id: String1
  rowId: String1
  tableId: String1
  url: String1
  urlType: UrlTypes
  urlTypeId: String1
}

input AssetUrlsBoolExp {
  _and: [AssetUrlsBoolExp!]
  _not: AssetUrlsBoolExp
  _or: [AssetUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: UrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input AssetUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: UrlTypesOrderBy
  urlTypeId: OrderBy
}

type Assets {
  assetDeployments(limit: Int, offset: Int, order_by: [AssetDeploymentsOrderBy!], where: assetDeploymentsBoolExp): [AssetDeployments!]
  assetDeploymentsAggregate(filter_input: AssetDeploymentsFilterInput): AssetDeploymentsAggExp!
  assetStatus: AssetStatuses
  assetStatusId: String1
  assetType: AssetTypes
  assetTypeId: String1
  derivativeAssets(limit: Int, offset: Int, order_by: [DerivativeAssetsOrderBy!], where: DerivativeAssetsBoolExp): [DerivativeAssets!]
  derivativeAssetsAggregate(filter_input: DerivativeAssetsFilterInput): DerivativeAssetsAggExp!
  derivativeAssetsByBaseAssetId(limit: Int, offset: Int, order_by: [DerivativeAssetsOrderBy!], where: DerivativeAssetsBoolExp): [DerivativeAssets!]
  derivativeAssetsByBaseAssetIdAggregate(filter_input: DerivativeAssetsFilterInput): DerivativeAssetsAggExp!
  description: String1!
  icon: String1!
  id: String1!
  name: String1!
  productAssetRelationships(limit: Int, offset: Int, order_by: [ProductAssetRelationshipsOrderBy!], where: ProductAssetRelationshipsBoolExp): [ProductAssetRelationships!]
  productAssetRelationshipsAggregate(filter_input: ProductAssetRelationshipsFilterInput): ProductAssetRelationshipsAggExp!
  root: Roots
  rootId: String1!
  ticker: String1!
  urls(limit: Int, offset: Int, order_by: [AssetUrlsOrderBy!], where: AssetUrlsBoolExp): [AssetUrls!]
}

type AssetsAggExp {
  _count: Int!
  assetStatusId: StringAggExp!
  assetTypeId: StringAggExp!
  description: StringAggExp!
  icon: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
  rootId: StringAggExp!
  ticker: StringAggExp!
}

input AssetsBoolExp {
  _and: [AssetsBoolExp!]
  _not: AssetsBoolExp
  _or: [AssetsBoolExp!]
  assetDeployments: assetDeploymentsBoolExp
  assetStatus: AssetStatusesBoolExp
  assetStatusId: StringBoolExp
  assetType: AssetTypesBoolExp
  assetTypeId: StringBoolExp
  derivativeAssets: DerivativeAssetsBoolExp
  derivativeAssetsByBaseAssetId: DerivativeAssetsBoolExp
  description: StringBoolExp
  icon: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  productAssetRelationships: ProductAssetRelationshipsBoolExp
  root: RootsBoolExp
  rootId: StringBoolExp
  ticker: StringBoolExp
}

input AssetsFilterInput {
  limit: Int
  offset: Int
  order_by: [AssetsOrderBy!]
  where: AssetsBoolExp
}

input AssetsOrderBy {
  assetStatus: AssetStatusesOrderBy
  assetStatusId: OrderBy
  assetType: AssetTypesOrderBy
  assetTypeId: OrderBy
  description: OrderBy
  icon: OrderBy
  id: OrderBy
  name: OrderBy
  root: RootsOrderBy
  rootId: OrderBy
  ticker: OrderBy
}

type CoreTableNames {
  id: String1!
  tableName: String1!
  urls(limit: Int, offset: Int, order_by: [UrlsOrderBy!], where: UrlsBoolExp): [Urls!]
  urlsAggregate(filter_input: UrlsFilterInput): UrlsAggExp!
}

type CoreTableNamesAggExp {
  _count: Int!
  id: StringAggExp!
  tableName: StringAggExp!
}

input CoreTableNamesBoolExp {
  _and: [CoreTableNamesBoolExp!]
  _not: CoreTableNamesBoolExp
  _or: [CoreTableNamesBoolExp!]
  id: StringBoolExp
  tableName: StringBoolExp
  urls: UrlsBoolExp
}

input CoreTableNamesFilterInput {
  limit: Int
  offset: Int
  order_by: [CoreTableNamesOrderBy!]
  where: CoreTableNamesBoolExp
}

input CoreTableNamesOrderBy {
  id: OrderBy
  tableName: OrderBy
}

type Countries {
  code: String1!
  entities(limit: Int, offset: Int, order_by: [EntitiesOrderBy!], where: EntitiesBoolExp): [Entities!]
  entitiesAggregate(filter_input: EntitiesFilterInput): EntitiesAggExp!
  id: String1!
  name: String1!
}

type CountriesAggExp {
  _count: Int!
  code: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input CountriesBoolExp {
  _and: [CountriesBoolExp!]
  _not: CountriesBoolExp
  _or: [CountriesBoolExp!]
  code: StringBoolExp
  entities: EntitiesBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input CountriesFilterInput {
  limit: Int
  offset: Int
  order_by: [CountriesOrderBy!]
  where: CountriesBoolExp
}

input CountriesOrderBy {
  code: OrderBy
  id: OrderBy
  name: OrderBy
}

scalar Date

type DateAggExp {
  _count: Int!
  _count_distinct: Int!
}

input DateBoolExp {
  _eq: Date
  _gt: Date
  _gte: Date
  _in: [Date!]
  _is_null: Boolean
  _lt: Date
  _lte: Date
}

type DeploymentTypes {
  definition: String1!
  id: String1!
  name: String1!
  smartContractDeployments(limit: Int, offset: Int, order_by: [SmartContractDeploymentsOrderBy!], where: SmartContractDeploymentsBoolExp): [SmartContractDeployments!]
  smartContractDeploymentsAggregate(filter_input: SmartContractDeploymentsFilterInput): SmartContractDeploymentsAggExp!
}

type DeploymentTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input DeploymentTypesBoolExp {
  _and: [DeploymentTypesBoolExp!]
  _not: DeploymentTypesBoolExp
  _or: [DeploymentTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  smartContractDeployments: SmartContractDeploymentsBoolExp
}

input DeploymentTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [DeploymentTypesOrderBy!]
  where: DeploymentTypesBoolExp
}

input DeploymentTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type DerivativeAssets {
  asset: Assets
  assetByBaseAssetId: Assets
  baseAssetId: String1!
  derivativeAssetId: String1!
  id: String1!
}

type DerivativeAssetsAggExp {
  _count: Int!
  baseAssetId: StringAggExp!
  derivativeAssetId: StringAggExp!
  id: StringAggExp!
}

input DerivativeAssetsBoolExp {
  _and: [DerivativeAssetsBoolExp!]
  _not: DerivativeAssetsBoolExp
  _or: [DerivativeAssetsBoolExp!]
  asset: AssetsBoolExp
  assetByBaseAssetId: AssetsBoolExp
  baseAssetId: StringBoolExp
  derivativeAssetId: StringBoolExp
  id: StringBoolExp
}

input DerivativeAssetsFilterInput {
  limit: Int
  offset: Int
  order_by: [DerivativeAssetsOrderBy!]
  where: DerivativeAssetsBoolExp
}

input DerivativeAssetsOrderBy {
  asset: AssetsOrderBy
  assetByBaseAssetId: AssetsOrderBy
  baseAssetId: OrderBy
  derivativeAssetId: OrderBy
  id: OrderBy
}

type Entities {
  address: String1!
  country: Countries
  countryId: String1
  dateOfIncorporation: Date
  entityType: EntityTypes
  entityTypeId: String1
  id: String1!
  leiNumber: String1!
  localRegistrationNumber: String1!
  name: String1!
  root: Roots
  rootId: String1!
  taxIdentificationNumber: String1!
  tradeName: String1!
  urls(limit: Int, offset: Int, order_by: [EntityUrlsOrderBy!], where: EntityUrlsBoolExp): [EntityUrls!]
}

type EntitiesAggExp {
  _count: Int!
  address: StringAggExp!
  countryId: StringAggExp!
  dateOfIncorporation: DateAggExp!
  entityTypeId: StringAggExp!
  id: StringAggExp!
  leiNumber: StringAggExp!
  localRegistrationNumber: StringAggExp!
  name: StringAggExp!
  rootId: StringAggExp!
  taxIdentificationNumber: StringAggExp!
  tradeName: StringAggExp!
}

input EntitiesBoolExp {
  _and: [EntitiesBoolExp!]
  _not: EntitiesBoolExp
  _or: [EntitiesBoolExp!]
  address: StringBoolExp
  country: CountriesBoolExp
  countryId: StringBoolExp
  dateOfIncorporation: DateBoolExp
  entityType: EntityTypesBoolExp
  entityTypeId: StringBoolExp
  id: StringBoolExp
  leiNumber: StringBoolExp
  localRegistrationNumber: StringBoolExp
  name: StringBoolExp
  root: RootsBoolExp
  rootId: StringBoolExp
  taxIdentificationNumber: StringBoolExp
  tradeName: StringBoolExp
}

input EntitiesFilterInput {
  limit: Int
  offset: Int
  order_by: [EntitiesOrderBy!]
  where: EntitiesBoolExp
}

input EntitiesOrderBy {
  address: OrderBy
  country: CountriesOrderBy
  countryId: OrderBy
  dateOfIncorporation: OrderBy
  entityType: EntityTypesOrderBy
  entityTypeId: OrderBy
  id: OrderBy
  leiNumber: OrderBy
  localRegistrationNumber: OrderBy
  name: OrderBy
  root: RootsOrderBy
  rootId: OrderBy
  taxIdentificationNumber: OrderBy
  tradeName: OrderBy
}

type EntityTypes {
  definition: String1!
  entities(limit: Int, offset: Int, order_by: [EntitiesOrderBy!], where: EntitiesBoolExp): [Entities!]
  entitiesAggregate(filter_input: EntitiesFilterInput): EntitiesAggExp!
  id: String1!
  name: String1!
}

type EntityTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input EntityTypesBoolExp {
  _and: [EntityTypesBoolExp!]
  _not: EntityTypesBoolExp
  _or: [EntityTypesBoolExp!]
  definition: StringBoolExp
  entities: EntitiesBoolExp
  id: StringBoolExp
  name: StringBoolExp
}

input EntityTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [EntityTypesOrderBy!]
  where: EntityTypesBoolExp
}

input EntityTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type EntityUrls {
  id: String1
  rowId: String1
  tableId: String1
  url: String1
  urlType: UrlTypes
  urlTypeId: String1
}

input EntityUrlsBoolExp {
  _and: [EntityUrlsBoolExp!]
  _not: EntityUrlsBoolExp
  _or: [EntityUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: UrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input EntityUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: UrlTypesOrderBy
  urlTypeId: OrderBy
}

scalar Float64

scalar Int8

type Int8AggExp {
  _count: Int!
  _count_distinct: Int!
  avg: Float64!
  count: Int64!
  max: Int8!
  min: Int8!
  sum: Int64!
}

input Int8BoolExp {
  _eq: Int8
  _gt: Int8
  _gte: Int8
  _in: [Int8!]
  _is_null: Boolean
  _lt: Int8
  _lte: Int8
}

scalar Int64

type Mutation {
  _no_fields_accessible: String
}

enum OrderBy {
  """Sorts the data in ascending order"""
  Asc
  """Sorts the data in descending order"""
  Desc
}

type ProductAssetRelationships {
  asset: Assets
  assetId: String1!
  assetSupportType: AssetSupportTypes
  id: String1!
  product: Products
  productId: String1!
  typeOfSupportId: String1
}

type ProductAssetRelationshipsAggExp {
  _count: Int!
  assetId: StringAggExp!
  id: StringAggExp!
  productId: StringAggExp!
  typeOfSupportId: StringAggExp!
}

input ProductAssetRelationshipsBoolExp {
  _and: [ProductAssetRelationshipsBoolExp!]
  _not: ProductAssetRelationshipsBoolExp
  _or: [ProductAssetRelationshipsBoolExp!]
  asset: AssetsBoolExp
  assetId: StringBoolExp
  assetSupportType: AssetSupportTypesBoolExp
  id: StringBoolExp
  product: ProductsBoolExp
  productId: StringBoolExp
  typeOfSupportId: StringBoolExp
}

input ProductAssetRelationshipsFilterInput {
  limit: Int
  offset: Int
  order_by: [ProductAssetRelationshipsOrderBy!]
  where: ProductAssetRelationshipsBoolExp
}

input ProductAssetRelationshipsOrderBy {
  asset: AssetsOrderBy
  assetId: OrderBy
  assetSupportType: AssetSupportTypesOrderBy
  id: OrderBy
  product: ProductsOrderBy
  productId: OrderBy
  typeOfSupportId: OrderBy
}

type ProductDeployments {
  deploymentId: String1!
  id: String1!
  product: Products
  productId: String1!
  smartContractDeployment: SmartContractDeployments
}

type ProductDeploymentsAggExp {
  _count: Int!
  deploymentId: StringAggExp!
  id: StringAggExp!
  productId: StringAggExp!
}

input ProductDeploymentsBoolExp {
  _and: [ProductDeploymentsBoolExp!]
  _not: ProductDeploymentsBoolExp
  _or: [ProductDeploymentsBoolExp!]
  deploymentId: StringBoolExp
  id: StringBoolExp
  product: ProductsBoolExp
  productId: StringBoolExp
  smartContractDeployment: SmartContractDeploymentsBoolExp
}

input ProductDeploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [ProductDeploymentsOrderBy!]
  where: ProductDeploymentsBoolExp
}

input ProductDeploymentsOrderBy {
  deploymentId: OrderBy
  id: OrderBy
  product: ProductsOrderBy
  productId: OrderBy
  smartContractDeployment: SmartContractDeploymentsOrderBy
}

type ProductStatuses {
  definition: String1!
  id: String1!
  name: String1!
  products(limit: Int, offset: Int, order_by: [ProductsOrderBy!], where: ProductsBoolExp): [Products!]
  productsAggregate(filter_input: ProductsFilterInput): ProductsAggExp!
}

type ProductStatusesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ProductStatusesBoolExp {
  _and: [ProductStatusesBoolExp!]
  _not: ProductStatusesBoolExp
  _or: [ProductStatusesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  products: ProductsBoolExp
}

input ProductStatusesFilterInput {
  limit: Int
  offset: Int
  order_by: [ProductStatusesOrderBy!]
  where: ProductStatusesBoolExp
}

input ProductStatusesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type ProductTypes {
  definition: String1!
  id: String1!
  name: String1!
  products(limit: Int, offset: Int, order_by: [ProductsOrderBy!], where: ProductsBoolExp): [Products!]
  productsAggregate(filter_input: ProductsFilterInput): ProductsAggExp!
}

type ProductTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ProductTypesBoolExp {
  _and: [ProductTypesBoolExp!]
  _not: ProductTypesBoolExp
  _or: [ProductTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  products: ProductsBoolExp
}

input ProductTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [ProductTypesOrderBy!]
  where: ProductTypesBoolExp
}

input ProductTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type ProductUrls {
  id: String1
  rowId: String1
  tableId: String1
  url: String1
  urlType: UrlTypes
  urlTypeId: String1
}

input ProductUrlsBoolExp {
  _and: [ProductUrlsBoolExp!]
  _not: ProductUrlsBoolExp
  _or: [ProductUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: UrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input ProductUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: UrlTypesOrderBy
  urlTypeId: OrderBy
}

type Products {
  description: String1!
  id: String1!
  isMainProduct: Int8!
  launchDate: Date
  name: String1!
  productAssetRelationships(limit: Int, offset: Int, order_by: [ProductAssetRelationshipsOrderBy!], where: ProductAssetRelationshipsBoolExp): [ProductAssetRelationships!]
  productAssetRelationshipsAggregate(filter_input: ProductAssetRelationshipsFilterInput): ProductAssetRelationshipsAggExp!
  productDeployments(limit: Int, offset: Int, order_by: [ProductDeploymentsOrderBy!], where: ProductDeploymentsBoolExp): [ProductDeployments!]
  productDeploymentsAggregate(filter_input: ProductDeploymentsFilterInput): ProductDeploymentsAggExp!
  productStatus: ProductStatuses
  productStatusId: String1
  productType: ProductTypes
  productTypeId: String1
  root: Roots
  rootId: String1!
  supportsProducts(limit: Int, offset: Int, order_by: [SupportsProductsOrderBy!], where: SupportsProductsBoolExp): [SupportsProducts!]
  supportsProductsAggregate(filter_input: SupportsProductsFilterInput): SupportsProductsAggExp!
  supportsProductsBySupportsProductId(limit: Int, offset: Int, order_by: [SupportsProductsOrderBy!], where: SupportsProductsBoolExp): [SupportsProducts!]
  supportsProductsBySupportsProductIdAggregate(filter_input: SupportsProductsFilterInput): SupportsProductsAggExp!
  urls(limit: Int, offset: Int, order_by: [ProductUrlsOrderBy!], where: ProductUrlsBoolExp): [ProductUrls!]
}

type ProductsAggExp {
  _count: Int!
  description: StringAggExp!
  id: StringAggExp!
  isMainProduct: Int8AggExp!
  launchDate: DateAggExp!
  name: StringAggExp!
  productStatusId: StringAggExp!
  productTypeId: StringAggExp!
  rootId: StringAggExp!
}

input ProductsBoolExp {
  _and: [ProductsBoolExp!]
  _not: ProductsBoolExp
  _or: [ProductsBoolExp!]
  description: StringBoolExp
  id: StringBoolExp
  isMainProduct: Int8BoolExp
  launchDate: DateBoolExp
  name: StringBoolExp
  productAssetRelationships: ProductAssetRelationshipsBoolExp
  productDeployments: ProductDeploymentsBoolExp
  productStatus: ProductStatusesBoolExp
  productStatusId: StringBoolExp
  productType: ProductTypesBoolExp
  productTypeId: StringBoolExp
  root: RootsBoolExp
  rootId: StringBoolExp
  supportsProducts: SupportsProductsBoolExp
  supportsProductsBySupportsProductId: SupportsProductsBoolExp
}

input ProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [ProductsOrderBy!]
  where: ProductsBoolExp
}

input ProductsOrderBy {
  description: OrderBy
  id: OrderBy
  isMainProduct: OrderBy
  launchDate: OrderBy
  name: OrderBy
  productStatus: ProductStatusesOrderBy
  productStatusId: OrderBy
  productType: ProductTypesOrderBy
  productTypeId: OrderBy
  root: RootsOrderBy
  rootId: OrderBy
}

type ProfileInfoUrls {
  id: String1
  rowId: String1
  tableId: String1
  url: String1
  urlType: UrlTypes
  urlTypeId: String1
}

input ProfileInfoUrlsBoolExp {
  _and: [ProfileInfoUrlsBoolExp!]
  _not: ProfileInfoUrlsBoolExp
  _or: [ProfileInfoUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: UrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input ProfileInfoUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: UrlTypesOrderBy
  urlTypeId: OrderBy
}

type ProfileInfos {
  descriptionLong: String1!
  descriptionShort: String1!
  foundingDate: Date
  icon: String1!
  id: String1!
  logo: String1!
  name: String1!
  profileSector: ProfileSectors
  profileSectorId: String1
  profileStatus: ProfileStatuses
  profileStatusId: String1
  profileType: ProfileTypes
  profileTypeId: String1
  root: Roots
  rootId: String1!
  """Self promotion field"""
  tagLine: String1!
  urls(limit: Int, offset: Int, order_by: [ProfileInfoUrlsOrderBy!], where: ProfileInfoUrlsBoolExp): [ProfileInfoUrls!]
}

type ProfileInfosAggExp {
  _count: Int!
  descriptionLong: StringAggExp!
  descriptionShort: StringAggExp!
  foundingDate: DateAggExp!
  icon: StringAggExp!
  id: StringAggExp!
  logo: StringAggExp!
  name: StringAggExp!
  profileSectorId: StringAggExp!
  profileStatusId: StringAggExp!
  profileTypeId: StringAggExp!
  rootId: StringAggExp!
  tagLine: StringAggExp!
}

input ProfileInfosBoolExp {
  _and: [ProfileInfosBoolExp!]
  _not: ProfileInfosBoolExp
  _or: [ProfileInfosBoolExp!]
  descriptionLong: StringBoolExp
  descriptionShort: StringBoolExp
  foundingDate: DateBoolExp
  icon: StringBoolExp
  id: StringBoolExp
  logo: StringBoolExp
  name: StringBoolExp
  profileSector: ProfileSectorsBoolExp
  profileSectorId: StringBoolExp
  profileStatus: ProfileStatusesBoolExp
  profileStatusId: StringBoolExp
  profileType: ProfileTypesBoolExp
  profileTypeId: StringBoolExp
  root: RootsBoolExp
  rootId: StringBoolExp
  tagLine: StringBoolExp
}

input ProfileInfosFilterInput {
  limit: Int
  offset: Int
  order_by: [ProfileInfosOrderBy!]
  where: ProfileInfosBoolExp
}

input ProfileInfosOrderBy {
  descriptionLong: OrderBy
  descriptionShort: OrderBy
  foundingDate: OrderBy
  icon: OrderBy
  id: OrderBy
  logo: OrderBy
  name: OrderBy
  profileSector: ProfileSectorsOrderBy
  profileSectorId: OrderBy
  profileStatus: ProfileStatusesOrderBy
  profileStatusId: OrderBy
  profileType: ProfileTypesOrderBy
  profileTypeId: OrderBy
  root: RootsOrderBy
  rootId: OrderBy
  tagLine: OrderBy
}

type ProfileSectors {
  definition: String1!
  id: String1!
  name: String1!
  profileInfos(limit: Int, offset: Int, order_by: [ProfileInfosOrderBy!], where: ProfileInfosBoolExp): [ProfileInfos!]
  profileInfosAggregate(filter_input: ProfileInfosFilterInput): ProfileInfosAggExp!
}

type ProfileSectorsAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ProfileSectorsBoolExp {
  _and: [ProfileSectorsBoolExp!]
  _not: ProfileSectorsBoolExp
  _or: [ProfileSectorsBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileInfos: ProfileInfosBoolExp
}

input ProfileSectorsFilterInput {
  limit: Int
  offset: Int
  order_by: [ProfileSectorsOrderBy!]
  where: ProfileSectorsBoolExp
}

input ProfileSectorsOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type ProfileStatuses {
  definition: String1!
  id: String1!
  name: String1!
  profileInfos(limit: Int, offset: Int, order_by: [ProfileInfosOrderBy!], where: ProfileInfosBoolExp): [ProfileInfos!]
  profileInfosAggregate(filter_input: ProfileInfosFilterInput): ProfileInfosAggExp!
}

type ProfileStatusesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ProfileStatusesBoolExp {
  _and: [ProfileStatusesBoolExp!]
  _not: ProfileStatusesBoolExp
  _or: [ProfileStatusesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileInfos: ProfileInfosBoolExp
}

input ProfileStatusesFilterInput {
  limit: Int
  offset: Int
  order_by: [ProfileStatusesOrderBy!]
  where: ProfileStatusesBoolExp
}

input ProfileStatusesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

""" """
type ProfileTags {
  id: String1!
  root: Roots
  rootId: String1!
  tag: Tags
  tagId: String1!
}

type ProfileTagsAggExp {
  _count: Int!
  id: StringAggExp!
  rootId: StringAggExp!
  tagId: StringAggExp!
}

input ProfileTagsBoolExp {
  _and: [ProfileTagsBoolExp!]
  _not: ProfileTagsBoolExp
  _or: [ProfileTagsBoolExp!]
  id: StringBoolExp
  root: RootsBoolExp
  rootId: StringBoolExp
  tag: TagsBoolExp
  tagId: StringBoolExp
}

input ProfileTagsFilterInput {
  limit: Int
  offset: Int
  order_by: [ProfileTagsOrderBy!]
  where: ProfileTagsBoolExp
}

input ProfileTagsOrderBy {
  id: OrderBy
  root: RootsOrderBy
  rootId: OrderBy
  tag: TagsOrderBy
  tagId: OrderBy
}

type ProfileTypes {
  definition: String1!
  id: String1!
  name: String1!
  profileInfos(limit: Int, offset: Int, order_by: [ProfileInfosOrderBy!], where: ProfileInfosBoolExp): [ProfileInfos!]
  profileInfosAggregate(filter_input: ProfileInfosFilterInput): ProfileInfosAggExp!
}

type ProfileTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input ProfileTypesBoolExp {
  _and: [ProfileTypesBoolExp!]
  _not: ProfileTypesBoolExp
  _or: [ProfileTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileInfos: ProfileInfosBoolExp
}

input ProfileTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [ProfileTypesOrderBy!]
  where: ProfileTypesBoolExp
}

input ProfileTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type Query {
  assetDeployments(limit: Int, offset: Int, order_by: [AssetDeploymentsOrderBy!], where: assetDeploymentsBoolExp): [AssetDeployments!]
  assetDeploymentsAggregate(filter_input: AssetDeploymentsFilterInput): AssetDeploymentsAggExp
  assetStandards(limit: Int, offset: Int, order_by: [AssetStandardsOrderBy!], where: AssetStandardsBoolExp): [AssetStandards!]
  assetStandardsAggregate(filter_input: AssetStandardsFilterInput): AssetStandardsAggExp
  assetStatuses(limit: Int, offset: Int, order_by: [AssetStatusesOrderBy!], where: AssetStatusesBoolExp): [AssetStatuses!]
  assetStatusesAggregate(filter_input: AssetStatusesFilterInput): AssetStatusesAggExp
  assetSupportTypes(limit: Int, offset: Int, order_by: [AssetSupportTypesOrderBy!], where: AssetSupportTypesBoolExp): [AssetSupportTypes!]
  assetSupportTypesAggregate(filter_input: AssetSupportTypesFilterInput): AssetSupportTypesAggExp
  assetTypes(limit: Int, offset: Int, order_by: [AssetTypesOrderBy!], where: AssetTypesBoolExp): [AssetTypes!]
  assetTypesAggregate(filter_input: AssetTypesFilterInput): AssetTypesAggExp
  assets(limit: Int, offset: Int, order_by: [AssetsOrderBy!], where: AssetsBoolExp): [Assets!]
  assetsAggregate(filter_input: AssetsFilterInput): AssetsAggExp
  coreTableNames(limit: Int, offset: Int, order_by: [CoreTableNamesOrderBy!], where: CoreTableNamesBoolExp): [CoreTableNames!]
  coreTableNamesAggregate(filter_input: CoreTableNamesFilterInput): CoreTableNamesAggExp
  countries(limit: Int, offset: Int, order_by: [CountriesOrderBy!], where: CountriesBoolExp): [Countries!]
  countriesAggregate(filter_input: CountriesFilterInput): CountriesAggExp
  deploymentTypes(limit: Int, offset: Int, order_by: [DeploymentTypesOrderBy!], where: DeploymentTypesBoolExp): [DeploymentTypes!]
  deploymentTypesAggregate(filter_input: DeploymentTypesFilterInput): DeploymentTypesAggExp
  derivativeAssets(limit: Int, offset: Int, order_by: [DerivativeAssetsOrderBy!], where: DerivativeAssetsBoolExp): [DerivativeAssets!]
  derivativeAssetsAggregate(filter_input: DerivativeAssetsFilterInput): DerivativeAssetsAggExp
  entities(limit: Int, offset: Int, order_by: [EntitiesOrderBy!], where: EntitiesBoolExp): [Entities!]
  entitiesAggregate(filter_input: EntitiesFilterInput): EntitiesAggExp
  entityTypes(limit: Int, offset: Int, order_by: [EntityTypesOrderBy!], where: EntityTypesBoolExp): [EntityTypes!]
  entityTypesAggregate(filter_input: EntityTypesFilterInput): EntityTypesAggExp
  productAssetRelationships(limit: Int, offset: Int, order_by: [ProductAssetRelationshipsOrderBy!], where: ProductAssetRelationshipsBoolExp): [ProductAssetRelationships!]
  productAssetRelationshipsAggregate(filter_input: ProductAssetRelationshipsFilterInput): ProductAssetRelationshipsAggExp
  productDeployments(limit: Int, offset: Int, order_by: [ProductDeploymentsOrderBy!], where: ProductDeploymentsBoolExp): [ProductDeployments!]
  productDeploymentsAggregate(filter_input: ProductDeploymentsFilterInput): ProductDeploymentsAggExp
  productStatuses(limit: Int, offset: Int, order_by: [ProductStatusesOrderBy!], where: ProductStatusesBoolExp): [ProductStatuses!]
  productStatusesAggregate(filter_input: ProductStatusesFilterInput): ProductStatusesAggExp
  productTypes(limit: Int, offset: Int, order_by: [ProductTypesOrderBy!], where: ProductTypesBoolExp): [ProductTypes!]
  productTypesAggregate(filter_input: ProductTypesFilterInput): ProductTypesAggExp
  products(limit: Int, offset: Int, order_by: [ProductsOrderBy!], where: ProductsBoolExp): [Products!]
  productsAggregate(filter_input: ProductsFilterInput): ProductsAggExp
  profileInfos(limit: Int, offset: Int, order_by: [ProfileInfosOrderBy!], where: ProfileInfosBoolExp): [ProfileInfos!]
  profileInfosAggregate(filter_input: ProfileInfosFilterInput): ProfileInfosAggExp
  profileInfosById(id: String1!): ProfileInfos
  profileSectors(limit: Int, offset: Int, order_by: [ProfileSectorsOrderBy!], where: ProfileSectorsBoolExp): [ProfileSectors!]
  profileSectorsAggregate(filter_input: ProfileSectorsFilterInput): ProfileSectorsAggExp
  profileStatuses(limit: Int, offset: Int, order_by: [ProfileStatusesOrderBy!], where: ProfileStatusesBoolExp): [ProfileStatuses!]
  profileStatusesAggregate(filter_input: ProfileStatusesFilterInput): ProfileStatusesAggExp
  """Selects multiple objects from the model. Model description:  """
  profileTags(limit: Int, offset: Int, order_by: [ProfileTagsOrderBy!], where: ProfileTagsBoolExp): [ProfileTags!]
  profileTagsAggregate(filter_input: ProfileTagsFilterInput): ProfileTagsAggExp
  profileTypes(limit: Int, offset: Int, order_by: [ProfileTypesOrderBy!], where: ProfileTypesBoolExp): [ProfileTypes!]
  profileTypesAggregate(filter_input: ProfileTypesFilterInput): ProfileTypesAggExp
  roots(limit: Int, offset: Int, order_by: [RootsOrderBy!], where: RootsBoolExp): [Roots!]
  rootsAggregate(filter_input: RootsFilterInput): RootsAggExp
  smartContractDeployments(limit: Int, offset: Int, order_by: [SmartContractDeploymentsOrderBy!], where: SmartContractDeploymentsBoolExp): [SmartContractDeployments!]
  smartContractDeploymentsAggregate(filter_input: SmartContractDeploymentsFilterInput): SmartContractDeploymentsAggExp
  smartContracts(limit: Int, offset: Int, order_by: [SmartContractsOrderBy!], where: SmartContractsBoolExp): [SmartContracts!]
  smartContractsAggregate(filter_input: SmartContractsFilterInput): SmartContractsAggExp
  socialTypes(limit: Int, offset: Int, order_by: [SocialTypesOrderBy!], where: SocialTypesBoolExp): [SocialTypes!]
  socialTypesAggregate(filter_input: SocialTypesFilterInput): SocialTypesAggExp
  socials(limit: Int, offset: Int, order_by: [SocialsOrderBy!], where: SocialsBoolExp): [Socials!]
  socialsAggregate(filter_input: SocialsFilterInput): SocialsAggExp
  """
  Selects multiple objects from the model. Model description: Table mapping product support relationships
  """
  supportsProducts(limit: Int, offset: Int, order_by: [SupportsProductsOrderBy!], where: SupportsProductsBoolExp): [SupportsProducts!]
  supportsProductsAggregate(filter_input: SupportsProductsFilterInput): SupportsProductsAggExp
  tagTypes(limit: Int, offset: Int, order_by: [TagTypesOrderBy!], where: TagTypesBoolExp): [TagTypes!]
  tagTypesAggregate(filter_input: TagTypesFilterInput): TagTypesAggExp
  tags(limit: Int, offset: Int, order_by: [TagsOrderBy!], where: TagsBoolExp): [Tags!]
  tagsAggregate(filter_input: TagsFilterInput): TagsAggExp
  urlTypes(limit: Int, offset: Int, order_by: [UrlTypesOrderBy!], where: UrlTypesBoolExp): [UrlTypes!]
  urlTypesAggregate(filter_input: UrlTypesFilterInput): UrlTypesAggExp
  urlTypesById(id: String1!): UrlTypes
  urls(limit: Int, offset: Int, order_by: [UrlsOrderBy!], where: UrlsBoolExp): [Urls!]
  urlsAggregate(filter_input: UrlsFilterInput): UrlsAggExp
  urlsById(id: String1!): Urls
}

type Roots {
  assets(limit: Int, offset: Int, order_by: [AssetsOrderBy!], where: AssetsBoolExp): [Assets!]
  assetsAggregate(filter_input: AssetsFilterInput): AssetsAggExp!
  entities(limit: Int, offset: Int, order_by: [EntitiesOrderBy!], where: EntitiesBoolExp): [Entities!]
  entitiesAggregate(filter_input: EntitiesFilterInput): EntitiesAggExp!
  id: String1!
  products(limit: Int, offset: Int, order_by: [ProductsOrderBy!], where: ProductsBoolExp): [Products!]
  productsAggregate(filter_input: ProductsFilterInput): ProductsAggExp!
  profileInfos(limit: Int, offset: Int, order_by: [ProfileInfosOrderBy!], where: ProfileInfosBoolExp): [ProfileInfos!]
  profileInfosAggregate(filter_input: ProfileInfosFilterInput): ProfileInfosAggExp!
  profileTags(limit: Int, offset: Int, order_by: [ProfileTagsOrderBy!], where: ProfileTagsBoolExp): [ProfileTags!]
  profileTagsAggregate(filter_input: ProfileTagsFilterInput): ProfileTagsAggExp!
  slug: String1!
  socials(limit: Int, offset: Int, order_by: [SocialsOrderBy!], where: SocialsBoolExp): [Socials!]
  socialsAggregate(filter_input: SocialsFilterInput): SocialsAggExp!
  urlMain: String1!
}

type RootsAggExp {
  _count: Int!
  id: StringAggExp!
  slug: StringAggExp!
  urlMain: StringAggExp!
}

input RootsBoolExp {
  _and: [RootsBoolExp!]
  _not: RootsBoolExp
  _or: [RootsBoolExp!]
  assets: AssetsBoolExp
  entities: EntitiesBoolExp
  id: StringBoolExp
  products: ProductsBoolExp
  profileInfos: ProfileInfosBoolExp
  profileTags: ProfileTagsBoolExp
  slug: StringBoolExp
  socials: SocialsBoolExp
  urlMain: StringBoolExp
}

input RootsFilterInput {
  limit: Int
  offset: Int
  order_by: [RootsOrderBy!]
  where: RootsBoolExp
}

input RootsOrderBy {
  id: OrderBy
  slug: OrderBy
  urlMain: OrderBy
}

type SmartContractDeployments {
  assetDeployments(limit: Int, offset: Int, order_by: [AssetDeploymentsOrderBy!], where: assetDeploymentsBoolExp): [AssetDeployments!]
  assetDeploymentsAggregate(filter_input: AssetDeploymentsFilterInput): AssetDeploymentsAggExp!
  assetStandard: AssetStandards
  deployedOnId: String1
  deployedOnProduct: Products
  deploymentType: DeploymentTypes
  deploymentTypeId: String1
  id: String1!
  isOfStandardId: String1
  productDeployments(limit: Int, offset: Int, order_by: [ProductDeploymentsOrderBy!], where: ProductDeploymentsBoolExp): [ProductDeployments!]
  productDeploymentsAggregate(filter_input: ProductDeploymentsFilterInput): ProductDeploymentsAggExp!
  smartContracts(limit: Int, offset: Int, order_by: [SmartContractsOrderBy!], where: SmartContractsBoolExp): [SmartContracts!]
  smartContractsAggregate(filter_input: SmartContractsFilterInput): SmartContractsAggExp!
}

type SmartContractDeploymentsAggExp {
  _count: Int!
  deployedOnId: StringAggExp!
  deploymentTypeId: StringAggExp!
  id: StringAggExp!
  isOfStandardId: StringAggExp!
}

input SmartContractDeploymentsBoolExp {
  _and: [SmartContractDeploymentsBoolExp!]
  _not: SmartContractDeploymentsBoolExp
  _or: [SmartContractDeploymentsBoolExp!]
  assetDeployments: assetDeploymentsBoolExp
  assetStandard: AssetStandardsBoolExp
  deployedOnId: StringBoolExp
  deployedOnProduct: ProductsBoolExp
  deploymentType: DeploymentTypesBoolExp
  deploymentTypeId: StringBoolExp
  id: StringBoolExp
  isOfStandardId: StringBoolExp
  productDeployments: ProductDeploymentsBoolExp
  smartContracts: SmartContractsBoolExp
}

input SmartContractDeploymentsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmartContractDeploymentsOrderBy!]
  where: SmartContractDeploymentsBoolExp
}

input SmartContractDeploymentsOrderBy {
  assetStandard: AssetStandardsOrderBy
  deployedOnId: OrderBy
  deployedOnProduct: ProductsOrderBy
  deploymentType: DeploymentTypesOrderBy
  deploymentTypeId: OrderBy
  id: OrderBy
  isOfStandardId: OrderBy
}

type SmartContracts {
  address: String1!
  deploymentDate: Date
  deploymentId: String1
  id: String1!
  name: String1!
  smartContractDeployment: SmartContractDeployments
}

type SmartContractsAggExp {
  _count: Int!
  address: StringAggExp!
  deploymentDate: DateAggExp!
  deploymentId: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input SmartContractsBoolExp {
  _and: [SmartContractsBoolExp!]
  _not: SmartContractsBoolExp
  _or: [SmartContractsBoolExp!]
  address: StringBoolExp
  deploymentDate: DateBoolExp
  deploymentId: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  smartContractDeployment: SmartContractDeploymentsBoolExp
}

input SmartContractsFilterInput {
  limit: Int
  offset: Int
  order_by: [SmartContractsOrderBy!]
  where: SmartContractsBoolExp
}

input SmartContractsOrderBy {
  address: OrderBy
  deploymentDate: OrderBy
  deploymentId: OrderBy
  id: OrderBy
  name: OrderBy
  smartContractDeployment: SmartContractDeploymentsOrderBy
}

type SocialTypes {
  definition: String1!
  id: String1!
  name: String1!
  socials(limit: Int, offset: Int, order_by: [SocialsOrderBy!], where: SocialsBoolExp): [Socials!]
  socialsAggregate(filter_input: SocialsFilterInput): SocialsAggExp!
}

type SocialTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input SocialTypesBoolExp {
  _and: [SocialTypesBoolExp!]
  _not: SocialTypesBoolExp
  _or: [SocialTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  socials: SocialsBoolExp
}

input SocialTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [SocialTypesOrderBy!]
  where: SocialTypesBoolExp
}

input SocialTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type SocialUrls {
  id: String1
  rowId: String1
  tableId: String1
  url: String1
  urlType: UrlTypes
  urlTypeId: String1
}

input SocialUrlsBoolExp {
  _and: [SocialUrlsBoolExp!]
  _not: SocialUrlsBoolExp
  _or: [SocialUrlsBoolExp!]
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: UrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input SocialUrlsOrderBy {
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: UrlTypesOrderBy
  urlTypeId: OrderBy
}

type Socials {
  id: String1!
  name: String1!
  root: Roots
  rootId: String1!
  socialType: SocialTypes
  socialTypeId: String1
  urls(limit: Int, offset: Int, order_by: [SocialUrlsOrderBy!], where: SocialUrlsBoolExp): [SocialUrls!]
}

type SocialsAggExp {
  _count: Int!
  id: StringAggExp!
  name: StringAggExp!
  rootId: StringAggExp!
  socialTypeId: StringAggExp!
}

input SocialsBoolExp {
  _and: [SocialsBoolExp!]
  _not: SocialsBoolExp
  _or: [SocialsBoolExp!]
  id: StringBoolExp
  name: StringBoolExp
  root: RootsBoolExp
  rootId: StringBoolExp
  socialType: SocialTypesBoolExp
  socialTypeId: StringBoolExp
}

input SocialsFilterInput {
  limit: Int
  offset: Int
  order_by: [SocialsOrderBy!]
  where: SocialsBoolExp
}

input SocialsOrderBy {
  id: OrderBy
  name: OrderBy
  root: RootsOrderBy
  rootId: OrderBy
  socialType: SocialTypesOrderBy
  socialTypeId: OrderBy
}

scalar String1

type StringAggExp {
  _count: Int!
  _count_distinct: Int!
  max: String1!
  min: String1!
}

input StringBoolExp {
  _contains: String1
  _eq: String1
  _in: [String1!]
  _is_null: Boolean
  _like: String1
}

type Subscription {
  _no_fields_accessible: String
}

"""Table mapping product support relationships"""
type SupportsProducts {
  id: String1!
  product: Products
  productId: String1!
  supportsProduct: Products
  supportsProductId: String1!
}

type SupportsProductsAggExp {
  _count: Int!
  id: StringAggExp!
  productId: StringAggExp!
  supportsProductId: StringAggExp!
}

input SupportsProductsBoolExp {
  _and: [SupportsProductsBoolExp!]
  _not: SupportsProductsBoolExp
  _or: [SupportsProductsBoolExp!]
  id: StringBoolExp
  product: ProductsBoolExp
  productId: StringBoolExp
  supportsProduct: ProductsBoolExp
  supportsProductId: StringBoolExp
}

input SupportsProductsFilterInput {
  limit: Int
  offset: Int
  order_by: [SupportsProductsOrderBy!]
  where: SupportsProductsBoolExp
}

input SupportsProductsOrderBy {
  id: OrderBy
  product: ProductsOrderBy
  productId: OrderBy
  supportsProduct: ProductsOrderBy
  supportsProductId: OrderBy
}

type TagTypes {
  definition: String1!
  id: String1!
  name: String1!
  tags(limit: Int, offset: Int, order_by: [TagsOrderBy!], where: TagsBoolExp): [Tags!]
  tagsAggregate(filter_input: TagsFilterInput): TagsAggExp!
}

type TagTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input TagTypesBoolExp {
  _and: [TagTypesBoolExp!]
  _not: TagTypesBoolExp
  _or: [TagTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  tags: TagsBoolExp
}

input TagTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [TagTypesOrderBy!]
  where: TagTypesBoolExp
}

input TagTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type Tags {
  description: String1!
  id: String1!
  name: String1!
  profileTags(limit: Int, offset: Int, order_by: [ProfileTagsOrderBy!], where: ProfileTagsBoolExp): [ProfileTags!]
  profileTagsAggregate(filter_input: ProfileTagsFilterInput): ProfileTagsAggExp!
  tagType: TagTypes
  tagTypeId: String1
}

type TagsAggExp {
  _count: Int!
  description: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
  tagTypeId: StringAggExp!
}

input TagsBoolExp {
  _and: [TagsBoolExp!]
  _not: TagsBoolExp
  _or: [TagsBoolExp!]
  description: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  profileTags: ProfileTagsBoolExp
  tagType: TagTypesBoolExp
  tagTypeId: StringBoolExp
}

input TagsFilterInput {
  limit: Int
  offset: Int
  order_by: [TagsOrderBy!]
  where: TagsBoolExp
}

input TagsOrderBy {
  description: OrderBy
  id: OrderBy
  name: OrderBy
  tagType: TagTypesOrderBy
  tagTypeId: OrderBy
}

type UrlTypes {
  definition: String1!
  id: String1!
  name: String1!
  urls(limit: Int, offset: Int, order_by: [UrlsOrderBy!], where: UrlsBoolExp): [Urls!]
  urlsAggregate(filter_input: UrlsFilterInput): UrlsAggExp!
}

type UrlTypesAggExp {
  _count: Int!
  definition: StringAggExp!
  id: StringAggExp!
  name: StringAggExp!
}

input UrlTypesBoolExp {
  _and: [UrlTypesBoolExp!]
  _not: UrlTypesBoolExp
  _or: [UrlTypesBoolExp!]
  definition: StringBoolExp
  id: StringBoolExp
  name: StringBoolExp
  urls: UrlsBoolExp
}

input UrlTypesFilterInput {
  limit: Int
  offset: Int
  order_by: [UrlTypesOrderBy!]
  where: UrlTypesBoolExp
}

input UrlTypesOrderBy {
  definition: OrderBy
  id: OrderBy
  name: OrderBy
}

type Urls {
  coreTableName: CoreTableNames
  id: String1!
  rowId: String1!
  tableId: String1!
  url: String1!
  urlType: UrlTypes
  urlTypeId: String1
}

type UrlsAggExp {
  _count: Int!
  id: StringAggExp!
  rowId: StringAggExp!
  tableId: StringAggExp!
  url: StringAggExp!
  urlTypeId: StringAggExp!
}

input UrlsBoolExp {
  _and: [UrlsBoolExp!]
  _not: UrlsBoolExp
  _or: [UrlsBoolExp!]
  coreTableName: CoreTableNamesBoolExp
  id: StringBoolExp
  rowId: StringBoolExp
  tableId: StringBoolExp
  url: StringBoolExp
  urlType: UrlTypesBoolExp
  urlTypeId: StringBoolExp
}

input UrlsFilterInput {
  limit: Int
  offset: Int
  order_by: [UrlsOrderBy!]
  where: UrlsBoolExp
}

input UrlsOrderBy {
  coreTableName: CoreTableNamesOrderBy
  id: OrderBy
  rowId: OrderBy
  tableId: OrderBy
  url: OrderBy
  urlType: UrlTypesOrderBy
  urlTypeId: OrderBy
}

input assetDeploymentsBoolExp {
  _and: [assetDeploymentsBoolExp!]
  _not: assetDeploymentsBoolExp
  _or: [assetDeploymentsBoolExp!]
  asset: AssetsBoolExp
  assetId: StringBoolExp
  deploymentId: StringBoolExp
  id: StringBoolExp
  smartContractDeployment: SmartContractDeploymentsBoolExp
}